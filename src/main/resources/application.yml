avro:
  topic:
    name: restaurant-orders
spring:
  kafka:
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#      group-id: restaurant-group
#      auto-offset-reset: earliest
#      specific-avro-reader: true
#      bootstrap-servers: 127.0.0.1:9092
#      properties:
#        schema:
#          registry:
#            url: http://127.0.0.1:8081
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      bootstrap-servers: 127.0.0.1:9092
      properties:
        schema:
          registry:
            url: http://127.0.0.1:8081


  jpa:
    generate-ddl: 'true'
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  redis:
    host: localhost
    port: '6379'
  datasource:
    password: postgres
    driver-class-name: org.postgresql.Driver
    initialization-mode: always
    username: postgres
    url: jdbc:postgresql://127.0.0.1:5432/restaurantdb
    continue-on-error: 'true'
