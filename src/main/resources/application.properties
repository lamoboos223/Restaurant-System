# postgres config
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/restaurantdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true

# redis config
spring.redis.host=localhost
spring.redis.port=6379

# kafka and schema registry config
spring.kafka.bootstrap-servers=127.0.0.1:9092
avro.topic.name=restaurant-orders
spring.kafka.properties.schema.registry.url=http://127.0.0.1:8081
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.valueDeserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=restaurant-group





